{
  "timestamp": "2025-09-21T20:56:37.052Z",
  "auditId": "EMERGENCY_DB_AUDIT_1758488197053",
  "tests": [
    {
      "testName": "Supabase Real-time Subscriptions Test",
      "status": "failed",
      "startTime": 1758488197055,
      "metrics": {},
      "errors": [
        "Missing Supabase configuration. Please check NEXT_PUBLIC_SUPABASE_URL and SUPABASE_SERVICE_ROLE_KEY environment variables."
      ]
    },
    {
      "testName": "Tier-based Access Control Test",
      "status": "passed",
      "startTime": 1758488197060,
      "tierTests": {
        "starter": {
          "customerCreated": false,
          "error": "Missing Supabase configuration. Please check NEXT_PUBLIC_SUPABASE_URL and SUPABASE_SERVICE_ROLE_KEY environment variables."
        },
        "growth": {
          "customerCreated": false,
          "error": "Missing Supabase configuration. Please check NEXT_PUBLIC_SUPABASE_URL and SUPABASE_SERVICE_ROLE_KEY environment variables."
        },
        "professional": {
          "customerCreated": false,
          "error": "Missing Supabase configuration. Please check NEXT_PUBLIC_SUPABASE_URL and SUPABASE_SERVICE_ROLE_KEY environment variables."
        },
        "enterprise": {
          "customerCreated": false,
          "error": "Missing Supabase configuration. Please check NEXT_PUBLIC_SUPABASE_URL and SUPABASE_SERVICE_ROLE_KEY environment variables."
        }
      },
      "errors": []
    },
    {
      "testName": "Database Query Performance & Indexing Test",
      "status": "passed",
      "startTime": 1758488197061,
      "queryTests": {
        "customerLookupById": {
          "responseTime": 0,
          "status": "optimal"
        },
        "customerList": {
          "responseTime": 1,
          "status": "optimal"
        },
        "statusFiltering": {
          "responseTime": 0,
          "status": "optimal"
        },
        "metadataSearch": {
          "error": "Cannot read properties of null (reading 'from')",
          "status": "failed"
        },
        "overall": {
          "averageResponseTime": 1,
          "status": "optimal"
        }
      },
      "errors": []
    },
    {
      "testName": "Concurrent User Load Test",
      "status": "passed",
      "startTime": 1758488197062,
      "userCount": 100,
      "metrics": {
        "totalRequests": 500,
        "successfulRequests": 500,
        "failedRequests": 0,
        "averageResponseTime": 80.848,
        "maxResponseTime": 502,
        "minResponseTime": 4,
        "responseTimes": [
          502,
          498,
          502,
          502,
          502,
          501,
          501,
          501,
          497,
          501,
          501,
          501,
          501,
          500,
          500,
          500,
          500,
          500,
          500,
          500,
          500,
          500,
          500,
          500,
          499,
          496,
          499,
          496,
          496,
          496,
          496,
          499,
          499,
          496,
          499,
          499,
          499,
          499,
          496,
          499,
          498,
          498,
          498,
          498,
          498,
          498,
          498,
          496,
          498,
          497,
          497,
          495,
          497,
          497,
          497,
          497,
          497,
          495,
          497,
          497,
          47,
          46,
          44,
          44,
          46,
          46,
          46,
          46,
          46,
          46,
          43,
          45,
          45,
          45,
          45,
          45,
          42,
          44,
          42,
          42,
          44,
          44,
          44,
          44,
          44,
          42,
          42,
          44,
          44,
          43,
          43,
          43,
          43,
          43,
          41,
          41,
          41,
          43,
          43,
          43,
          42,
          40,
          42,
          42,
          42,
          40,
          40,
          42,
          42,
          40,
          42,
          41,
          41,
          41,
          39,
          41,
          41,
          41,
          41,
          41,
          39,
          39,
          41,
          40,
          40,
          40,
          38,
          40,
          38,
          40,
          40,
          40,
          38,
          40,
          40,
          39,
          39,
          38,
          38,
          38,
          38,
          38,
          38,
          37,
          37,
          35,
          37,
          37,
          37,
          37,
          37,
          36,
          34,
          36,
          36,
          36,
          36,
          36,
          36,
          35,
          35,
          35,
          35,
          35,
          35,
          35,
          34,
          34,
          34,
          34,
          32,
          34,
          34,
          33,
          33,
          33,
          31,
          33,
          33,
          31,
          33,
          31,
          31,
          33,
          33,
          30,
          32,
          32,
          32,
          30,
          32,
          32,
          32,
          32,
          32,
          30,
          30,
          32,
          31,
          31,
          31,
          29,
          31,
          31,
          31,
          31,
          31,
          30,
          28,
          30,
          30,
          30,
          30,
          30,
          28,
          28,
          28,
          28,
          28,
          30,
          28,
          30,
          28,
          30,
          29,
          29,
          29,
          29,
          29,
          29,
          29,
          29,
          29,
          28,
          25,
          27,
          27,
          27,
          25,
          27,
          27,
          27,
          27,
          24,
          24,
          26,
          26,
          26,
          26,
          26,
          26,
          26,
          25,
          24,
          25,
          25,
          24,
          24,
          25,
          24,
          25,
          25,
          25,
          25,
          25,
          25,
          23,
          24,
          24,
          24,
          23,
          24,
          24,
          24,
          24,
          24,
          24,
          22,
          23,
          23,
          22,
          23,
          23,
          23,
          23,
          23,
          22,
          23,
          23,
          22,
          22,
          21,
          22,
          22,
          22,
          21,
          21,
          21,
          22,
          21,
          22,
          22,
          21,
          21,
          22,
          22,
          21,
          21,
          21,
          21,
          21,
          20,
          20,
          21,
          20,
          21,
          21,
          20,
          21,
          20,
          20,
          20,
          19,
          20,
          20,
          20,
          19,
          19,
          19,
          18,
          19,
          18,
          19,
          19,
          19,
          18,
          18,
          19,
          18,
          18,
          18,
          18,
          18,
          18,
          18,
          18,
          17,
          17,
          17,
          16,
          16,
          16,
          17,
          16,
          17,
          17,
          17,
          17,
          16,
          16,
          16,
          16,
          16,
          15,
          16,
          16,
          16,
          15,
          15,
          15,
          15,
          16,
          16,
          15,
          15,
          15,
          15,
          15,
          14,
          14,
          15,
          14,
          15,
          15,
          15,
          14,
          13,
          14,
          14,
          13,
          14,
          13,
          14,
          14,
          13,
          14,
          14,
          13,
          12,
          13,
          13,
          13,
          13,
          13,
          11,
          12,
          12,
          12,
          12,
          11,
          12,
          11,
          12,
          11,
          12,
          12,
          11,
          11,
          10,
          11,
          11,
          11,
          11,
          10,
          10,
          10,
          10,
          10,
          10,
          10,
          10,
          9,
          9,
          9,
          10,
          9,
          8,
          9,
          8,
          9,
          9,
          9,
          8,
          9,
          9,
          9,
          9,
          8,
          7,
          8,
          8,
          8,
          8,
          8,
          8,
          8,
          7,
          7,
          7,
          7,
          7,
          7,
          7,
          7,
          7,
          7,
          7,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          4,
          4,
          4,
          4,
          4,
          4,
          4,
          4
        ],
        "successRate": 100,
        "totalTestTime": 503
      },
      "errors": []
    },
    {
      "testName": "Enterprise Tier Prioritization Test",
      "status": "passed",
      "startTime": 1758488197566,
      "prioritizationTests": {
        "prioritizationWorking": {
          "enterpriseFastest": true,
          "enterpriseTime": null,
          "professionalTime": null,
          "starterTime": null
        }
      },
      "errors": []
    }
  ],
  "summary": {
    "totalTests": 5,
    "passed": 4,
    "failed": 1,
    "criticalIssues": [
      {
        "test": "Supabase Real-time Subscriptions Test",
        "errors": [
          "Missing Supabase configuration. Please check NEXT_PUBLIC_SUPABASE_URL and SUPABASE_SERVICE_ROLE_KEY environment variables."
        ]
      }
    ],
    "performanceMetrics": {
      "queryCount": 0,
      "errorCount": 504,
      "avgResponseTime": 0,
      "connectionAttempts": 0,
      "cacheHits": 0,
      "cacheMisses": 0,
      "preparedStatementUses": 0,
      "connectionPoolUtilization": 0,
      "queryTypeDistribution": {},
      "performanceTrends": [],
      "cacheSize": 0,
      "cacheHitRatio": "0%",
      "hotQueriesCount": 0,
      "errorRate": "0%",
      "topQueryTypes": [],
      "recentPerformanceTrend": "insufficient_data",
      "connectionPoolHealth": {
        "utilization": "0.0%",
        "maxConnections": 40,
        "idleTimeout": 600000,
        "status": "healthy"
      },
      "performancePrediction": "insufficient_data"
    },
    "realtimeStatus": {},
    "tierBasedAccess": {},
    "concurrentUserTest": {},
    "emergencyFindings": [
      "🚨 CRITICAL ISSUES DETECTED - Immediate attention required"
    ],
    "auditDuration": 511,
    "databaseHealth": {
      "status": "unknown",
      "lastUpdated": 1758488197566,
      "performance": {
        "avgResponseTime": 0,
        "totalQueries": 0,
        "queriesPerMinute": 0,
        "errorRate": "0%",
        "trend": "insufficient_data"
      },
      "cache": {
        "hitRatio": "0%",
        "totalSize": 0,
        "hotQueries": 0,
        "memoryUsage": "0.00"
      },
      "connections": {
        "utilization": "0.0%",
        "maxConnections": 40,
        "idleTimeout": 600000,
        "status": "healthy"
      },
      "queryAnalysis": {
        "topTypes": [],
        "distribution": {},
        "preparedStatementEfficiency": 0
      },
      "alerts": [
        {
          "type": "warning",
          "message": "Low cache hit ratio detected",
          "suggestion": "Consider increasing cache TTL or optimizing query patterns"
        }
      ],
      "recommendations": [
        {
          "priority": "high",
          "action": "Implement prepared statements for frequent queries",
          "impact": "Can improve performance by 20-40%"
        }
      ]
    }
  }
}