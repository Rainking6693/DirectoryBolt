/**\n * JASON - Test Extension Validation After Fix\n * Tests the customer validation after fixing the Google Sheets private key\n */\n\nrequire('dotenv').config({ path: '.env.local' });\n\nconsole.log('üîß JASON - Testing Extension Validation After Private Key Fix...');\nconsole.log('=' .repeat(70));\n\n// Test Google Sheets connection first\nasync function testGoogleSheetsConnection() {\n  console.log('\\nüìä Testing Google Sheets Connection...');\n  \n  try {\n    const { createGoogleSheetsService } = require('./lib/services/google-sheets.js');\n    \n    console.log('‚úÖ Google Sheets service loaded');\n    \n    const service = createGoogleSheetsService();\n    console.log('‚úÖ Service instance created');\n    \n    await service.initialize();\n    console.log('‚úÖ Google Sheets initialized successfully!');\n    \n    // Test finding a customer\n    console.log('\\nüîç Testing customer lookup...');\n    let customer = await service.findByCustomerId('DIR-2025-001234');\n    \n    if (!customer) {\n      console.log('‚ö†Ô∏è  Test customer not found, creating one...');\n      \n      // Create a test customer\n      customer = await service.createBusinessSubmission({\n        customerId: 'DIR-2025-001234',\n        businessName: 'DirectoryBolt Test Business',\n        email: 'test@directorybolt.com',\n        packageType: 'professional',\n        submissionStatus: 'pending',\n        phone: '555-123-4567',\n        website: 'https://test-business.com',\n        description: 'Test business for AutoBolt extension validation'\n      });\n      \n      console.log('‚úÖ Test customer created successfully!');\n    }\n    \n    console.log('‚úÖ Customer found/created:');\n    console.log(`   Customer ID: ${customer.customerId || customer.customerID}`);\n    console.log(`   Business Name: ${customer.businessName}`);\n    console.log(`   Package Type: ${customer.packageType}`);\n    console.log(`   Status: ${customer.submissionStatus}`);\n    \n    return true;\n    \n  } catch (error) {\n    console.error('‚ùå Google Sheets test failed:', error.message);\n    console.error('   Full error:', error.stack?.substring(0, 500));\n    return false;\n  }\n}\n\n// Test the validation API endpoints\nasync function testValidationEndpoints() {\n  console.log('\\nüß™ Testing Validation API Endpoints...');\n  \n  const fetch = require('node-fetch');\n  const testCustomerId = 'DIR-2025-001234';\n  \n  // Test local development server first\n  const localEndpoints = [\n    'http://localhost:3000/api/extension/validate',\n    'http://localhost:3000/api/customer/validate'\n  ];\n  \n  console.log('\\nüè† Testing Local Development Server:');\n  \n  for (const endpoint of localEndpoints) {\n    try {\n      console.log(`\\n   Testing: ${endpoint}`);\n      \n      const response = await fetch(endpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'User-Agent': 'DirectoryBolt-Extension-Test/1.0'\n        },\n        body: JSON.stringify({\n          customerId: testCustomerId,\n          extensionVersion: '3.0.1',\n          timestamp: Date.now()\n        })\n      });\n      \n      console.log(`   Status: ${response.status} ${response.statusText}`);\n      \n      if (response.ok) {\n        const data = await response.json();\n        \n        if (data.valid || data.success) {\n          console.log(`   ‚úÖ SUCCESS: Customer validated!`);\n          console.log(`   Customer: ${data.customerName || data.customer?.businessName}`);\n          console.log(`   Package: ${data.packageType || data.customer?.packageType}`);\n        } else {\n          console.log(`   ‚ùå FAILED: ${data.error}`);\n          if (data.debug) {\n            console.log(`   üîß Debug: ${JSON.stringify(data.debug, null, 2)}`);\n          }\n        }\n      } else {\n        const errorText = await response.text();\n        console.log(`   ‚ùå HTTP Error: ${errorText.substring(0, 200)}`);\n      }\n      \n    } catch (error) {\n      console.log(`   üí• Network Error: ${error.message}`);\n    }\n  }\n  \n  // Test production endpoints\n  console.log('\\nüåê Testing Production Server:');\n  \n  const productionEndpoints = [\n    'https://directorybolt.com/api/extension/validate',\n    'https://directorybolt.com/api/customer/validate'\n  ];\n  \n  for (const endpoint of productionEndpoints) {\n    try {\n      console.log(`\\n   Testing: ${endpoint}`);\n      \n      const response = await fetch(endpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'User-Agent': 'DirectoryBolt-Extension-Test/1.0'\n        },\n        body: JSON.stringify({\n          customerId: testCustomerId,\n          extensionVersion: '3.0.1',\n          timestamp: Date.now()\n        })\n      });\n      \n      console.log(`   Status: ${response.status} ${response.statusText}`);\n      \n      if (response.ok) {\n        const data = await response.json();\n        \n        if (data.valid || data.success) {\n          console.log(`   ‚úÖ SUCCESS: Customer validated!`);\n          console.log(`   Customer: ${data.customerName || data.customer?.businessName}`);\n        } else {\n          console.log(`   ‚ùå FAILED: ${data.error}`);\n        }\n      } else {\n        const errorText = await response.text();\n        console.log(`   ‚ùå HTTP Error: ${errorText.substring(0, 200)}`);\n      }\n      \n    } catch (error) {\n      console.log(`   üí• Network Error: ${error.message}`);\n    }\n  }\n}\n\n// Run the tests\nasync function runTests() {\n  console.log('üöÄ Starting validation tests...');\n  \n  // Test 1: Google Sheets connection\n  const googleSheetsWorking = await testGoogleSheetsConnection();\n  \n  if (googleSheetsWorking) {\n    console.log('\\n‚úÖ Google Sheets connection is working!');\n    \n    // Test 2: API endpoints\n    await testValidationEndpoints();\n    \n    console.log('\\nüéØ EXTENSION TESTING INSTRUCTIONS:');\n    console.log('   1. Load the AutoBolt extension in Chrome');\n    console.log('   2. Click the extension icon');\n    console.log('   3. Enter customer ID: DIR-2025-001234');\n    console.log('   4. Click \"Validate Customer\"');\n    console.log('   5. Should show success instead of \"Validation failed\"');\n    \n  } else {\n    console.log('\\n‚ùå Google Sheets connection failed!');\n    console.log('   The private key fix may not have worked.');\n    console.log('   Check the error messages above for details.');\n  }\n  \n  console.log('\\nüìã SUMMARY:');\n  console.log(`   Google Sheets: ${googleSheetsWorking ? '‚úÖ Working' : '‚ùå Failed'}`);\n  console.log('   API Endpoints: See results above');\n  console.log('   Extension: Ready for testing if Google Sheets is working');\n}\n\nrunTests().catch(console.error);\n"