/**\n * JASON - Quick Fix for Google Sheets Private Key\n * Immediately fixes the malformed GOOGLE_PRIVATE_KEY\n */\n\nconst fs = require('fs');\n\nconsole.log('🔧 JASON - Quick Fix: Correcting Google Sheets Private Key...');\n\n// Read .env.local\nlet envContent = fs.readFileSync('.env.local', 'utf8');\n\n// Find the malformed private key section\nconst startMarker = 'GOOGLE_PRIVATE_KEY=';\nconst endMarker = '-----END PRIVATE KEY-----';\n\nconst startIndex = envContent.indexOf(startMarker);\nconst endIndex = envContent.indexOf(endMarker) + endMarker.length;\n\nif (startIndex === -1 || endIndex === -1) {\n  console.error('❌ Could not find private key section');\n  process.exit(1);\n}\n\n// Extract the private key content\nconst keySection = envContent.substring(startIndex, endIndex);\nconst keyContent = keySection.replace('GOOGLE_PRIVATE_KEY=\\n', '').trim();\n\n// Convert to properly escaped single line\nconst escapedKey = keyContent.replace(/\\n/g, '\\\\n');\nconst fixedLine = `GOOGLE_PRIVATE_KEY=\"${escapedKey}\"`;\n\n// Replace in the content\nconst fixedContent = envContent.substring(0, startIndex) + \n                    fixedLine + \n                    envContent.substring(endIndex);\n\n// Backup original\nfs.writeFileSync('.env.local.backup', envContent);\nconsole.log('💾 Created backup: .env.local.backup');\n\n// Write fixed version\nfs.writeFileSync('.env.local', fixedContent);\nconsole.log('✅ Fixed .env.local with properly escaped private key');\n\n// Verify the fix\nconsole.log('\\n🔍 Verifying fix...');\nconst newContent = fs.readFileSync('.env.local', 'utf8');\nconst newKeyLine = newContent.split('\\n').find(line => line.startsWith('GOOGLE_PRIVATE_KEY='));\n\nif (newKeyLine && newKeyLine.includes('-----BEGIN PRIVATE KEY-----') && !newKeyLine.includes('\\n')) {\n  console.log('✅ Private key is now on a single line with proper escaping');\n  console.log('✅ Google Sheets connection should now work');\n  \n  // Test the connection\n  console.log('\\n🧪 Testing Google Sheets connection...');\n  \n  // Reload environment variables\n  delete require.cache[require.resolve('dotenv')];\n  require('dotenv').config({ path: '.env.local' });\n  \n  try {\n    const { createGoogleSheetsService } = require('./lib/services/google-sheets.js');\n    const service = createGoogleSheetsService();\n    \n    service.initialize().then(() => {\n      console.log('✅ Google Sheets initialized successfully!');\n      return service.findByCustomerId('DIR-2025-001234');\n    }).then((customer) => {\n      if (customer) {\n        console.log('✅ Found customer:', customer.businessName);\n      } else {\n        console.log('⚠️  Customer not found, but connection works');\n      }\n      console.log('\\n🎯 EXTENSION VALIDATION SHOULD NOW WORK!');\n    }).catch((error) => {\n      console.error('❌ Still having issues:', error.message);\n    });\n    \n  } catch (error) {\n    console.error('💥 Test failed:', error.message);\n  }\n  \n} else {\n  console.error('❌ Fix verification failed');\n}\n"