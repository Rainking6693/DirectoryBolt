import Head from 'next/head'\nimport Layout from '../components/layout/Layout'\nimport { useState, useEffect } from 'react'\n\nexport default function ConsultantCostCalculator() {\n  const [inputs, setInputs] = useState({\n    consultingFirm: 'mckinsey',\n    projectType: 'market-analysis',\n    projectScope: 'standard',\n    timeline: 'normal',\n    teamSize: 'standard',\n    geography: 'us',\n    industry: 'general'\n  })\n  \n  const [results, setResults] = useState({\n    consultantCost: 0,\n    directoryBoltCost: 299,\n    savings: 0,\n    savingsPercentage: 0,\n    timeWeeks: 0,\n    hourlyRate: 0\n  })\n  \n  const consultingFirms = {\n    mckinsey: { name: 'McKinsey & Company', baseRate: 600, multiplier: 1.2 },\n    deloitte: { name: 'Deloitte Consulting', baseRate: 450, multiplier: 1.0 },\n    bcg: { name: 'Boston Consulting Group', baseRate: 650, multiplier: 1.15 },\n    bain: { name: 'Bain & Company', baseRate: 580, multiplier: 1.1 },\n    pwc: { name: 'PwC Consulting', baseRate: 400, multiplier: 0.9 },\n    ey: { name: 'EY Consulting', baseRate: 380, multiplier: 0.85 },\n    kpmg: { name: 'KPMG Consulting', baseRate: 350, multiplier: 0.8 },\n    accenture: { name: 'Accenture', baseRate: 320, multiplier: 0.75 }\n  }\n  \n  const projectTypes = {\n    'market-analysis': { name: 'Market Analysis', baseHours: 120, complexity: 1.0 },\n    'competitive-intelligence': { name: 'Competitive Intelligence', baseHours: 150, complexity: 1.2 },\n    'strategic-planning': { name: 'Strategic Planning', baseHours: 200, complexity: 1.5 },\n    'digital-transformation': { name: 'Digital Transformation', baseHours: 300, complexity: 2.0 },\n    'operational-improvement': { name: 'Operational Improvement', baseHours: 180, complexity: 1.3 },\n    'merger-acquisition': { name: 'M&A Due Diligence', baseHours: 250, complexity: 1.8 },\n    'growth-strategy': { name: 'Growth Strategy', baseHours: 160, complexity: 1.4 },\n    'cost-reduction': { name: 'Cost Reduction', baseHours: 140, complexity: 1.1 }\n  }\n  \n  const projectScopes = {\n    basic: { name: 'Basic Analysis', multiplier: 0.7 },\n    standard: { name: 'Standard Project', multiplier: 1.0 },\n    comprehensive: { name: 'Comprehensive Study', multiplier: 1.5 },\n    enterprise: { name: 'Enterprise-wide', multiplier: 2.2 }\n  }\n  \n  const timelines = {\n    rush: { name: 'Rush (Premium)', multiplier: 1.5 },\n    normal: { name: 'Normal Timeline', multiplier: 1.0 },\n    extended: { name: 'Extended Timeline', multiplier: 0.9 }\n  }\n  \n  const teamSizes = {\n    small: { name: 'Small Team (2-3)', multiplier: 0.8 },\n    standard: { name: 'Standard Team (4-6)', multiplier: 1.0 },\n    large: { name: 'Large Team (7-10)', multiplier: 1.4 },\n    enterprise: { name: 'Enterprise Team (10+)', multiplier: 1.8 }\n  }\n  \n  const geographies = {\n    us: { name: 'United States', multiplier: 1.0 },\n    uk: { name: 'United Kingdom', multiplier: 0.9 },\n    eu: { name: 'European Union', multiplier: 0.85 },\n    asia: { name: 'Asia Pacific', multiplier: 0.7 },\n    emerging: { name: 'Emerging Markets', multiplier: 0.6 }\n  }\n  \n  const industries = {\n    general: { name: 'General Business', multiplier: 1.0 },\n    financial: { name: 'Financial Services', multiplier: 1.3 },\n    healthcare: { name: 'Healthcare', multiplier: 1.2 },\n    technology: { name: 'Technology', multiplier: 1.1 },\n    energy: { name: 'Energy & Utilities', multiplier: 1.25 },\n    manufacturing: { name: 'Manufacturing', multiplier: 1.05 },\n    retail: { name: 'Retail & Consumer', multiplier: 0.95 },\n    government: { name: 'Government & Public', multiplier: 0.8 }\n  }\n  \n  useEffect(() => {\n    calculateCosts()\n  }, [inputs])\n  \n  const calculateCosts = () => {\n    const firm = consultingFirms[inputs.consultingFirm as keyof typeof consultingFirms]\n    const project = projectTypes[inputs.projectType as keyof typeof projectTypes]\n    const scope = projectScopes[inputs.projectScope as keyof typeof projectScopes]\n    const timeline = timelines[inputs.timeline as keyof typeof timelines]\n    const team = teamSizes[inputs.teamSize as keyof typeof teamSizes]\n    const geography = geographies[inputs.geography as keyof typeof geographies]\n    const industry = industries[inputs.industry as keyof typeof industries]\n    \n    const baseHourlyRate = firm.baseRate * firm.multiplier\n    const adjustedHourlyRate = baseHourlyRate * geography.multiplier * industry.multiplier\n    \n    const totalHours = project.baseHours * project.complexity * scope.multiplier * team.multiplier\n    const timelineAdjustedCost = totalHours * adjustedHourlyRate * timeline.multiplier\n    \n    // Add overhead (typically 20-30% for top consulting firms)\n    const overhead = timelineAdjustedCost * 0.25\n    const totalCost = timelineAdjustedCost + overhead\n    \n    const timeWeeks = Math.ceil(totalHours / 40) // Assuming 40 hours per week\n    const savings = totalCost - 299\n    const savingsPercentage = Math.round((savings / totalCost) * 100)\n    \n    setResults({\n      consultantCost: Math.round(totalCost),\n      directoryBoltCost: 299,\n      savings: Math.round(savings),\n      savingsPercentage,\n      timeWeeks,\n      hourlyRate: Math.round(adjustedHourlyRate)\n    })\n  }\n  \n  const handleInputChange = (field: string, value: string) => {\n    setInputs(prev => ({ ...prev, [field]: value }))\n  }\n\n  return (\n    <>\n      <Head>\n        <title>Consultant Cost Calculator | Compare AI vs Traditional Consulting Costs</title>\n        <meta name=\"description\" content=\"Calculate exact consulting costs from McKinsey, Deloitte, BCG, and more. Compare with AI business intelligence. Interactive calculator with real pricing data.\" />\n        <meta name=\"keywords\" content=\"consultant cost calculator, consulting fees calculator, McKinsey cost calculator, business intelligence cost comparison, AI vs consultant pricing\" />\n        <link rel=\"canonical\" href=\"https://directorybolt.com/consultant-cost-calculator\" />\n        \n        {/* Open Graph */}\n        <meta property=\"og:title\" content=\"Consultant Cost Calculator | Compare AI vs Traditional Consulting\" />\n        <meta property=\"og:description\" content=\"Calculate exact consulting costs and compare with AI. Interactive calculator with real pricing data.\" />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:url\" content=\"https://directorybolt.com/consultant-cost-calculator\" />\n        <meta property=\"og:image\" content=\"https://directorybolt.com/images/consultant-calculator-og.jpg\" />\n        \n        {/* Twitter Card */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content=\"Consultant Cost Calculator | AI vs Traditional Consulting\" />\n        <meta name=\"twitter:description\" content=\"Calculate exact consulting costs and compare with AI business intelligence.\" />\n        <meta name=\"twitter:image\" content=\"https://directorybolt.com/images/consultant-calculator-twitter.jpg\" />\n        \n        {/* Calculator Tool Schema */}\n        <script\n          type=\"application/ld+json\"\n          dangerouslySetInnerHTML={{\n            __html: JSON.stringify({\n              \"@context\": \"https://schema.org\",\n              \"@type\": \"WebApplication\",\n              \"name\": \"Consultant Cost Calculator\",\n              \"description\": \"Interactive calculator to compare traditional consulting costs with AI business intelligence pricing\",\n              \"url\": \"https://directorybolt.com/consultant-cost-calculator\",\n              \"applicationCategory\": \"BusinessApplication\",\n              \"operatingSystem\": \"Web Browser\",\n              \"offers\": {\n                \"@type\": \"Offer\",\n                \"price\": \"0\",\n                \"priceCurrency\": \"USD\",\n                \"description\": \"Free consulting cost calculator tool\"\n              },\n              \"featureList\": [\n                \"Real consulting firm pricing data\",\n                \"Multiple project types and scopes\",\n                \"Geographic and industry adjustments\",\n                \"Instant cost comparisons\",\n                \"Savings calculations\"\n              ]\n            })\n          }}\n        />\n      </Head>\n\n      <Layout>\n        <div className=\"min-h-screen bg-white\">\n          {/* Hero Section */}\n          <section className=\"bg-gradient-to-br from-green-50 to-blue-100 py-20\">\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n              <div className=\"text-center\">\n                <h1 className=\"text-4xl md:text-6xl font-bold text-gray-900 mb-6\">\n                  Consultant Cost\n                  <span className=\"block text-green-600\">Calculator</span>\n                </h1>\n                <p className=\"text-xl md:text-2xl text-gray-600 mb-8 max-w-4xl mx-auto\">\n                  Calculate exact costs from <strong>McKinsey, Deloitte, BCG</strong> and other top consulting firms. \n                  Compare with AI business intelligence and see your potential savings.\n                </p>\n                <div className=\"inline-flex items-center gap-4 bg-blue-100 border border-blue-300 rounded-lg px-6 py-3 mb-8\">\n                  <span className=\"text-blue-600 text-2xl\">ðŸ§®</span>\n                  <span className=\"text-blue-800 font-semibold\">Real Pricing Data â€¢ Interactive Calculator â€¢ Instant Results</span>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          {/* Calculator Interface */}\n          <section className=\"py-20 bg-white\">\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n              <div className=\"grid lg:grid-cols-2 gap-12\">\n                {/* Input Panel */}\n                <div className=\"bg-gray-50 rounded-2xl p-8\">\n                  <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Project Configuration</h2>\n                  \n                  <div className=\"space-y-6\">\n                    {/* Consulting Firm */}\n                    <div>\n                      <label className=\"block text-sm font-semibold text-gray-700 mb-3\">\n                        Consulting Firm\n                      </label>\n                      <select\n                        value={inputs.consultingFirm}\n                        onChange={(e) => handleInputChange('consultingFirm', e.target.value)}\n                        className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                      >\n                        {Object.entries(consultingFirms).map(([key, firm]) => (\n                          <option key={key} value={key}>{firm.name}</option>\n                        ))}\n                      </select>\n                    </div>\n                    \n                    {/* Project Type */}\n                    <div>\n                      <label className=\"block text-sm font-semibold text-gray-700 mb-3\">\n                        Project Type\n                      </label>\n                      <select\n                        value={inputs.projectType}\n                        onChange={(e) => handleInputChange('projectType', e.target.value)}\n                        className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                      >\n                        {Object.entries(projectTypes).map(([key, project]) => (\n                          <option key={key} value={key}>{project.name}</option>\n                        ))}\n                      </select>\n                    </div>\n                    \n                    {/* Project Scope */}\n                    <div>\n                      <label className=\"block text-sm font-semibold text-gray-700 mb-3\">\n                        Project Scope\n                      </label>\n                      <select\n                        value={inputs.projectScope}\n                        onChange={(e) => handleInputChange('projectScope', e.target.value)}\n                        className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                      >\n                        {Object.entries(projectScopes).map(([key, scope]) => (\n                          <option key={key} value={key}>{scope.name}</option>\n                        ))}\n                      </select>\n                    </div>\n                    \n                    {/* Timeline */}\n                    <div>\n                      <label className=\"block text-sm font-semibold text-gray-700 mb-3\">\n                        Timeline Requirements\n                      </label>\n                      <select\n                        value={inputs.timeline}\n                        onChange={(e) => handleInputChange('timeline', e.target.value)}\n                        className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                      >\n                        {Object.entries(timelines).map(([key, timeline]) => (\n                          <option key={key} value={key}>{timeline.name}</option>\n                        ))}\n                      </select>\n                    </div>\n                    \n                    {/* Team Size */}\n                    <div>\n                      <label className=\"block text-sm font-semibold text-gray-700 mb-3\">\n                        Team Size\n                      </label>\n                      <select\n                        value={inputs.teamSize}\n                        onChange={(e) => handleInputChange('teamSize', e.target.value)}\n                        className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                      >\n                        {Object.entries(teamSizes).map(([key, team]) => (\n                          <option key={key} value={key}>{team.name}</option>\n                        ))}\n                      </select>\n                    </div>\n                    \n                    {/* Geography */}\n                    <div>\n                      <label className=\"block text-sm font-semibold text-gray-700 mb-3\">\n                        Geographic Region\n                      </label>\n                      <select\n                        value={inputs.geography}\n                        onChange={(e) => handleInputChange('geography', e.target.value)}\n                        className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                      >\n                        {Object.entries(geographies).map(([key, geo]) => (\n                          <option key={key} value={key}>{geo.name}</option>\n                        ))}\n                      </select>\n                    </div>\n                    \n                    {/* Industry */}\n                    <div>\n                      <label className=\"block text-sm font-semibold text-gray-700 mb-3\">\n                        Industry Sector\n                      </label>\n                      <select\n                        value={inputs.industry}\n                        onChange={(e) => handleInputChange('industry', e.target.value)}\n                        className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                      >\n                        {Object.entries(industries).map(([key, industry]) => (\n                          <option key={key} value={key}>{industry.name}</option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n                </div>\n                \n                {/* Results Panel */}\n                <div className=\"space-y-6\">\n                  {/* Cost Comparison */}\n                  <div className=\"grid md:grid-cols-2 gap-6\">\n                    {/* Consultant Cost */}\n                    <div className=\"bg-red-50 border-2 border-red-200 rounded-xl p-6\">\n                      <h3 className=\"text-lg font-bold text-red-800 mb-2\">\n                        {consultingFirms[inputs.consultingFirm as keyof typeof consultingFirms].name}\n                      </h3>\n                      <div className=\"text-3xl font-bold text-red-600 mb-2\">\n                        ${results.consultantCost.toLocaleString()}\n                      </div>\n                      <div className=\"text-sm text-red-700\">\n                        ${results.hourlyRate}/hour â€¢ {results.timeWeeks} weeks\n                      </div>\n                    </div>\n                    \n                    {/* DirectoryBolt Cost */}\n                    <div className=\"bg-green-50 border-2 border-green-200 rounded-xl p-6\">\n                      <h3 className=\"text-lg font-bold text-green-800 mb-2\">DirectoryBolt AI</h3>\n                      <div className=\"text-3xl font-bold text-green-600 mb-2\">$299</div>\n                      <div className=\"text-sm text-green-700\">Instant delivery â€¢ Same quality</div>\n                    </div>\n                  </div>\n                  \n                  {/* Savings Summary */}\n                  <div className=\"bg-gradient-to-r from-blue-500 to-green-600 text-white rounded-xl p-6\">\n                    <h3 className=\"text-xl font-bold mb-4\">Your Savings with AI</h3>\n                    <div className=\"grid grid-cols-3 gap-4\">\n                      <div className=\"text-center\">\n                        <div className=\"text-2xl font-bold\">${results.savings.toLocaleString()}</div>\n                        <div className=\"text-sm opacity-90\">Money Saved</div>\n                      </div>\n                      <div className=\"text-center\">\n                        <div className=\"text-2xl font-bold\">{results.savingsPercentage}%</div>\n                        <div className=\"text-sm opacity-90\">Cost Reduction</div>\n                      </div>\n                      <div className=\"text-center\">\n                        <div className=\"text-2xl font-bold\">{results.timeWeeks * 7 * 24 * 60}x</div>\n                        <div className=\"text-sm opacity-90\">Faster</div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  {/* Detailed Breakdown */}\n                  <div className=\"bg-white border border-gray-200 rounded-xl p-6\">\n                    <h3 className=\"text-lg font-bold text-gray-900 mb-4\">Cost Breakdown</h3>\n                    <div className=\"space-y-3\">\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-600\">Base Consulting Fee:</span>\n                        <span className=\"font-semibold\">${Math.round(results.consultantCost * 0.8).toLocaleString()}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-600\">Overhead & Admin (25%):</span>\n                        <span className=\"font-semibold\">${Math.round(results.consultantCost * 0.2).toLocaleString()}</span>\n                      </div>\n                      <div className=\"border-t pt-3 flex justify-between font-bold\">\n                        <span>Total Consultant Cost:</span>\n                        <span className=\"text-red-600\">${results.consultantCost.toLocaleString()}</span>\n                      </div>\n                      <div className=\"flex justify-between font-bold\">\n                        <span>DirectoryBolt AI Cost:</span>\n                        <span className=\"text-green-600\">$299</span>\n                      </div>\n                      <div className=\"border-t pt-3 flex justify-between font-bold text-lg\">\n                        <span>Your Savings:</span>\n                        <span className=\"text-blue-600\">${results.savings.toLocaleString()}</span>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  {/* Action Buttons */}\n                  <div className=\"space-y-4\">\n                    <button className=\"w-full bg-blue-600 text-white py-4 rounded-lg text-lg font-semibold hover:bg-blue-700 transition-colors\">\n                      Get AI Analysis for $299\n                    </button>\n                    <button className=\"w-full border-2 border-blue-600 text-blue-600 py-4 rounded-lg text-lg font-semibold hover:bg-blue-50 transition-colors\">\n                      Download Detailed Report\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          {/* Pricing Factors Explanation */}\n          <section className=\"py-20 bg-gray-50\">\n            <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n              <div className=\"text-center mb-12\">\n                <h2 className=\"text-3xl md:text-4xl font-bold text-gray-900 mb-4\">\n                  Understanding Consulting Pricing Factors\n                </h2>\n                <p className=\"text-xl text-gray-600\">\n                  How different variables affect traditional consulting costs\n                </p>\n              </div>\n              \n              <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n                {[\n                  {\n                    factor: 'Consulting Firm Brand',\n                    impact: 'High',\n                    description: 'McKinsey and BCG command premium rates due to brand prestige and perceived value.',\n                    range: '$350-650/hour'\n                  },\n                  {\n                    factor: 'Project Complexity',\n                    impact: 'Very High',\n                    description: 'Complex projects like M&A or digital transformation require specialized expertise.',\n                    range: '+50-100% cost'\n                  },\n                  {\n                    factor: 'Timeline Pressure',\n                    impact: 'Medium',\n                    description: 'Rush projects command premium pricing due to resource allocation challenges.',\n                    range: '+25-50% cost'\n                  },\n                  {\n                    factor: 'Team Size',\n                    impact: 'High',\n                    description: 'Larger teams increase costs exponentially due to coordination overhead.',\n                    range: '+40-80% cost'\n                  },\n                  {\n                    factor: 'Geographic Region',\n                    impact: 'Medium',\n                    description: 'US and UK markets command highest rates, emerging markets offer discounts.',\n                    range: '-40% to +0%'\n                  },\n                  {\n                    factor: 'Industry Specialization',\n                    impact: 'Medium',\n                    description: 'Regulated industries like financial services require specialized knowledge.',\n                    range: '+10-30% cost'\n                  }\n                ].map((factor, index) => (\n                  <div key={index} className=\"bg-white rounded-xl p-6 shadow-sm\">\n                    <h3 className=\"text-lg font-bold text-gray-900 mb-2\">{factor.factor}</h3>\n                    <div className={`inline-block px-3 py-1 rounded-full text-sm font-semibold mb-3 ${\n                      factor.impact === 'Very High' ? 'bg-red-100 text-red-800' :\n                      factor.impact === 'High' ? 'bg-orange-100 text-orange-800' :\n                      'bg-yellow-100 text-yellow-800'\n                    }`}>\n                      {factor.impact} Impact\n                    </div>\n                    <p className=\"text-gray-600 mb-3\">{factor.description}</p>\n                    <div className=\"text-sm font-semibold text-blue-600\">{factor.range}</div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </section>\n\n          {/* CTA Section */}\n          <section className=\"py-20 bg-gradient-to-r from-green-600 to-blue-600\">\n            <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n              <h2 className=\"text-3xl md:text-4xl font-bold text-white mb-6\">\n                Skip the Expensive Consultants\n              </h2>\n              <p className=\"text-xl text-green-100 mb-8\">\n                Get the same quality business intelligence for 99%+ less cost with AI technology\n              </p>\n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                <button className=\"bg-white text-green-600 px-8 py-4 rounded-lg text-lg font-semibold hover:bg-gray-100 transition-colors\">\n                  Get AI Analysis for $299\n                </button>\n                <button className=\"border-2 border-white text-white px-8 py-4 rounded-lg text-lg font-semibold hover:bg-white hover:text-green-600 transition-colors\">\n                  See Sample Analysis\n                </button>\n              </div>\n              <p className=\"mt-6 text-green-200\">\n                Instant delivery â€¢ Same quality â€¢ 99%+ savings â€¢ 14-day guarantee\n              </p>\n            </div>\n          </section>\n        </div>\n      </Layout>\n    </>\n  )\n}\n\nexport async function getStaticProps() {\n  return {\n    props: {\n      lastModified: new Date().toISOString(),\n    },\n    revalidate: 3600,\n  }\n}"